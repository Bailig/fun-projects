{"version":3,"sources":["../../joke-teller/src/config.ts","../../joke-teller/src/joke-teller-container.tsx","../../joke-teller/src/index.tsx"],"names":[],"mappings":"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","file":"src.cf9e1159.js","sourceRoot":"../public","sourcesContent":["// TODO: create a server that makes the request with the api key. the api key should not be stored in front end\nexport const { TEXT_TO_SPEECH_API_KEY } = process.env;\n","import React, { FC, useRef } from \"react\";\nimport useSWR from \"swr\";\nimport { TEXT_TO_SPEECH_API_KEY } from \"./config\";\n\nconst fetchText = async (...args: Parameters<typeof fetch>) => {\n  const response = await fetch(...args);\n  return response.text();\n};\nconst fetchJSON = async (...args: Parameters<typeof fetch>) => {\n  const response = await fetch(...args);\n  return response.json();\n};\n\nconst options = {\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n};\n\nexport const JokeTellerContainer: FC = () => {\n  const { data: joke, mutate } = useSWR<ApiJoke>(\n    \"https://sv443.net/jokeapi/v2/joke/Programming?blacklistFlags=nsfw,racist,sexist\",\n    fetchJSON,\n    options,\n  );\n\n  const jokeString = (() => {\n    if (!joke) return;\n    if (\"setup\" in joke) return `${joke.setup} ${joke.delivery}`;\n    return joke.joke;\n  })();\n\n  const { data: jokeAudio } = useSWR<string>(\n    jokeString\n      ? `https://api.voicerss.org/?key=${TEXT_TO_SPEECH_API_KEY}&hl=en-us&c=MP3&b64=true&src=${jokeString}`\n      : null,\n    fetchText,\n    options,\n  );\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  if (!jokeAudio || !joke) return <>loading...</>;\n\n  const handleClick = () => {\n    audioRef.current?.play();\n  };\n\n  const handleEnded = () => mutate();\n\n  return (\n    <>\n      <button type=\"button\" onClick={handleClick}>\n        Tell me a joke\n      </button>\n      <audio ref={audioRef} src={jokeAudio} onEnded={handleEnded} />\n    </>\n  );\n};\n\n// types\nexport type ApiJoke =\n  | {\n      setup: string;\n      delivery: string;\n\n      id: number;\n    }\n  | {\n      id: number;\n      joke: string;\n    };\n","export { JokeTellerContainer as default } from \"./joke-teller-container\";\n"]}